package lesson_5.exercises.EulerProject;

import java.util.LinkedList;
import java.util.Scanner;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 * <p>
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * <p>
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */

public class EvenFibonacci {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int numberOutput;

        System.out.println("Max sequence:");
        numberOutput = FibonacciResultMax(input.nextInt());
        System.out.println("Sum of even numbers: " + numberOutput);
    }

    public static int FibonacciResultMax(int number) {
        LinkedList<Integer> fibonacciNumbers = new LinkedList<>();
        int previous1 = 0;
        int previous2 = 1;
        int result = 1;
        int evenNumbersSum = 0;
        fibonacciNumbers.add(0);
        fibonacciNumbers.add(1);
        fibonacciNumbers.add(1);
        while (result <= number) {
            result = previous1 + previous2;
            fibonacciNumbers.add(result);
            previous1 = previous2;
            previous2 = result;
        }
        for (int evenCheck : fibonacciNumbers) {
            if (evenCheck % 2 == 0) {
                evenNumbersSum += evenCheck;
            }
        }
        return evenNumbersSum;
    }
}
